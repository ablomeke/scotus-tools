#!/usr/bin/env python

# Copyright (c) 2018  Floyd Terbo

import argparse
import logging
import os
import sys

import BeautifulSoup as BS
from feedgen.feed import FeedGenerator
import requests

from scotus.exceptions import NoDocketError
import scotus.util

logging.basicConfig(level=logging.INFO)

HEADERS = {"User-Agent" : "SCOTUS Orders Grabber (https://github.com/fterbo/scotus-tools)"}
BASE = "https://www.supremecourt.gov/oral_arguments/argument_audio"
QPURL = "https://www.supremecourt.gov/qp/%d-%05dqp.pdf"

def parse_args ():
  parser = argparse.ArgumentParser()
  parser.add_argument("-t", "--term", dest="term", type=int)
  parser.add_argument("--root", dest="root", type=str, default=".")
  args = parser.parse_args()
  return args


def GET (url):
  logging.debug("GET: %s" % (url))
  return requests.get(url, headers=HEADERS)


def build (term, root):
  r = GET("%s/20%d" % (BASE, term))
  if r.status_code != 200:
    print r.status_code
    sys.exit(1)

  fg = FeedGenerator()
  fg.load_extension("podcast")

  root = BS.BeautifulSoup(r.content)
  links = root.findAll("a")
  for link in links:
    href = link.get("href")
    if href and href.split("/")[-1].count("-"):
      (cterm, cdocket) = href.split("/")[-1].split("-")

      jpath = "%s/OT-%s/dockets/%s/docket.json" % (root, cterm, cdocket)
      if not os.path.exists(jpath):
        raise NoDocketError(docket_str)

      docket_obj = json.loads(open(jpath, "rb").read())
      info = scotus.util.DocketStatusInfo(docket_obj)
      qptxt = info.getQPText()

      fe = fg.add_entry()
      fe.id(href)
      fe.title("%s: %s" % (info.docketstr, scotus.util.buildCasename(info)))
      fe.description(qptxt)
      fe.enclosure(href, 0, "audio/mpeg")

  fg.rss_file("OT-%d.xml" % (term))
      

if __name__ == '__main__':
  opts = parse_args()

  build(opts.term, opts.root)
