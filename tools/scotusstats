#!/usr/bin/env python

# Copyright (c) 2018  Floyd Terbo

import argparse
import json
import logging
import os
import os.path
import pprint
import sys

import scotus.util

logging.basicConfig(level=logging.DEBUG)

def parse_args ():
  parser = argparse.ArgumentParser()
  parser.add_argument("-t", "--term", dest="term", type=int)
  parser.add_argument("--ifp", dest="ifp", action="store_true")
  parser.add_argument("--root", dest="root", type=str, default=".")
  parser.add_argument("--write", dest="write", action="store_true")
  args = parser.parse_args()
  return args


def build_stats (opts, path):
  sdata = {"denied" : 0, "granted" : 0, "pending" : 0, "summary" : 0, "decided" : 0, "dismissed" : 0, "gvr" : 0,
           "grants" : [], "pends" : [], "decides" : [], "dismissals" : [] }

  attys = {}

  ddirs = os.listdir(path)
  for ddir in ddirs:
    try:
      if int(ddir) > 4999 and not opts.ifp:
        continue
    except ValueError: # Not an integer
      continue

    dpath = "%s/%s/docket.json" % (path, ddir)
    if not os.path.exists(dpath):
      continue
    docket_obj = json.loads(open(dpath, "rb").read())

    docket = scotus.util.DocketStatusInfo(docket_obj)

    for pa in docket.attys_petitioner:
      attys.setdefault(pa, [0])[0] += 1

    for ra in docket.attys_respondent:
      attys.setdefault(ra, [0])[0] += 1


    if docket.gvr:
      sdata["gvr"] += 1
      continue

    if docket.pending:
      if docket.granted:
        if docket.argued:
          continue

        sdata["granted"] += 1
        sdata["grants"].append(int(ddir))
        continue

      sdata["pending"] += 1
      sdata["pends"].append(int(ddir))

      continue

    if docket.judgment_issued:
      sdata["decided"] += 1
      sdata["decides"].append(int(ddir))

    if docket.dismissed:
      sdata["dismissed"] += 1
      sdata["dismissals"].append(int(ddir))

    if docket.denied:
      sdata["denied"] += 1


  sdata["pends"].sort()
  sdata["grants"].sort()
  sdata["decides"].sort()
  sdata["dismissals"].sort()
  atty_counts = [(k,v[0]) for k,v in attys.items()]
  atty_counts.sort(key = lambda x: x[1], reverse=True)

  if opts.write:
    sdata["_atty_counts"] = atty_counts
    with open("summary.json", "w+") as f:
      f.write(json.dumps(sdata))
    del sdata["_atty_counts"]

    
  sdata["pends"] = ", ".join([str(x) for x in sdata["pends"]])
  sdata["grants"] = ", ".join([str(x) for x in sdata["grants"]])
  sdata["decides"] = ", ".join([str(x) for x in sdata["decides"]])
  sdata["dismissals"] = ", ".join([str(x) for x in sdata["dismissals"]])

  sdata["attorneys"] = atty_counts[:10]

  pprint.pprint(sdata)


if __name__ == '__main__':
  opts = parse_args()
  path = "%s/OT-%d/dockets" % (opts.root, opts.term)

  build_stats(opts, path)
