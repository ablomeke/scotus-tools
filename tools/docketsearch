#!/usr/bin/env python

# Copyright (c) 2018  Floyd Terbo

import argparse
import functools
import json
import logging
import multiprocessing
import os
import sys

logging.basicConfig(level=logging.INFO)

def parse_args ():
  parser = argparse.ArgumentParser()
  parser.add_argument("-t", "--term", dest="term", type=int)
  parser.add_argument("-n", "--docket-num", dest="docket_num", type=int)
  parser.add_argument("-p", "--parallel", dest="parallel", default=1, type=int)
  parser.add_argument("-q", "--query", dest="query")
  parser.add_argument("--root", dest="root", type=str, default=".")
  args = parser.parse_args()
  return args


def query (path, term):
  glen = len(term.split())
  with open("%s/indexes.json" % (path), "rb") as idxf:
    obj = json.loads(idxf.read())
    for (fname, grms) in obj.items():
      try:
        wd = grms["%d-gram" % (glen)]
        if term in wd:
          logging.info("[%d] in %s/%s" % (wd[term], path, fname))
      except KeyError:
        continue


if __name__ == '__main__':
  opts = parse_args()

  rootpath = "%s/OT-%d/dockets" % (opts.root, opts.term)

  if opts.docket_num:
    path = "%s/%d" % (rootpath, opts.docket_num)
    query(path, opts.query)
    sys.exit(0)

  pool = multiprocessing.Pool(processes = opts.parallel)

  ddirs = []
  for name in os.listdir(rootpath):
    dpath = "%s/%s" % (rootpath, name)
    if os.path.isdir(dpath):
      ddirs.append(dpath)

  pool.map(functools.partial(query, term=opts.query), ddirs)
